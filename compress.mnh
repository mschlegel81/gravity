#!C:\bin\mnh_light.exe -quiet -headless -convertPrintToLog -logDateFmt hh:mm:ss -logLocationLength 14 +log stdOut(1)
main(firstPattern,...)->begin
  files(firstPattern|...)
    .flatten
    .map((f)->f.changeFileExt(''))
    .unique
    .each(f,compressSet(f));
  log('Finished');
end;

datastore filestore;
datastoreName:=changeFileExt(myPath,'.datastore0');
compressSet(s)->begin
  local set:=files(['.anim','.exe','.dump'].map((e)->s.changeFileExt(e))).sort;
  local targetMnh:=s.changeFileExt('.mnh');
  local targetDat:=s.changeFileExt('.datastore0');

  (set.size==3) and (!fileExists(targetMnh) OR !fileExists(targetDat))
  ? begin
      log('Creating set: ',s);
      filestore:=set.map((f)->f.extractFileName=>f.fileContents);
      log('Writing ',targetDat);
      writeDataStores;
      copyFile(datastoreName,targetDat);
      log('Writing ',targetMnh);
      writeFileLines(targetMnh,
        ['datastore filestore;',
         'main->'&filestore.getInner(0).each(n,format('fileExists(%s)',n.escape)).join(' AND ')&' ? void : '&'begin',
         '  myPath.extractFileDirectory.changeDirectory;',
         '  filestore.each(entry,entry[0].writeFile(entry[1]));',
         'end;']);
      log('Done (set: ',s,')');
    end
  : void;
end;

main->allFiles('.','*.log').filter((f)->f.fileStats[0]>=5000).map((f)->f.changeFileExt('')).unique.each(f,compressSet(f));
