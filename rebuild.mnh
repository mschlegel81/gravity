LAZ_BUILD:='..\lazarus64\lazbuild.exe';
LPI:='gravity.lpi';
MODES:=['--bm=opt32' =>'grav032.exe',
        '--bm=opt64' =>'grav064.exe',
        '--bm=opt128'=>'grav128.exe',
        '--bm=opt256'=>'grav256.exe'];

softFail(...)->begin
  warn@...;
  beep;
end;

execBuild(customizationFile:String,mode:StringList(2),missingOnly:Boolean)->begin
  local targets:=split(customizationFile.extractFileDirectory,'_')[0]&['_high_density/','_low_density/','_ultra_density/']&mode[1];
  missingOnly
  ? targets:=targets.filter((f)->!fileExists(f) AND !(fileExists(f.changeFileExt('.mnh')) AND fileExists(f.changeFileExt('.dat'))))
  : void;
  targets.size==0 ? return void :

  print('Building ',customizationFile,' with mode ',mode[0]);
  copyFile(customizationFile,'customization.pas').assert;
  local buildOut:=exec(LAZ_BUILD,[LPI,mode[0]]);
  buildOut[1]==0
  ? future((src,tgt)->begin
      tgt.each(t,
        printf('%s -> %s',src,t),
        copyFile(src,t) ? void : softFail('Copy failed for: ',src,' -> ',t));
      deleteFile(src);
    end,[mode[1],targets])
  : softFail('Build failed for mode ',mode[0]," with:\n",buildOut[0].join("\n"));
end;

rebuild(missingOnly:Boolean,prefix)->
  allFiles('.','customization.pas')
  .filter((e)->e.extractFileDirectory not in ['.','.\backup','./backup'])
  .filter((e)->e.matches(prefix))
  .each(customizationFile,MODES.each(mode,execBuild(customizationFile,mode,missingOnly)),|)
  .each(copyFuture,copyFuture());

//*(Re)build all
main->rebuild(false,'.');
//*Build missing
main('missing')->rebuild(true,'.');
//*Build all matching a given prefix (regex)
main(prefix)->rebuild(false,'^./'&prefix);
//*Build all missing matching a given prefix (regex)
main('missing',prefix)->rebuild(true,'^./'&prefix);

@after
after->print('Rebuild done');
